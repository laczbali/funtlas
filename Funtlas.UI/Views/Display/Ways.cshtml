@using System.Globalization;
@using Funtlas.UI.Models.View;

<div id="map"></div>

@model WaysDisplay
@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

@section Styles
    {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin="" />

    <style>
        #map {
            height: 600px;
        }
    </style>
}

@section Scripts
{
    @* import Leaflet.js *@
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin="">
    </script>

    @* display map and lines *@
    <script>
        // create map
        var map = L.map('map').setView([51.505, -0.09], 13);
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        // create polylines to display
        var lines = [];
        @{
            foreach (var way in Model.Ways)
            {
                var arrPushStr = "lines.push(" + way.ToJsObjectString() + ");";
                @Html.Raw(arrPushStr)
                ;
            }
        }

        lines.forEach(function (line) {
            L.polyline(line.points, { color: line.color }).addTo(map);
        });

        // zoom the map
        @{
            var bounds = Model.GetBounds().Select(p => p.ToJsArrayString());
            var boundsString = $"[{string.Join(", ", bounds)}]";
            @Html.Raw($"map.fitBounds({boundsString});")
        }
    </script>
}
